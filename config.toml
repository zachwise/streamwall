[window]
# Window dimensions
width = 1280
height = 720

# Position a frameless window (useful for capturing w/ fixed screen positions)
#x = 0
#y = 0
#frameless = false

# Set the background color (useful for chroma-keying)
#background-color = "#0f0"

# Set the active (highlight) color
#active-color = "#fff"

[grid]
count = 3

[control]
# Address to serve control server from
address = "http://localhost:80"

# Override hostname and port
#hostname = "localhost"
#port = 80

# Username and password
username = "streamwall"
password = "streamit"

[data]
# Interval to refresh polled datasources
#interval = 30

# By default, we use the woke.net streams data source.
# You can add other URLs to fetch here:
json-url = ["./streams.json"]

# You can also specify .toml files on disk. Streamwall will reload the data whenever the file changes.
# See example.streams.toml for a sample.
toml-file = ["./streams.toml"]

[twitch]
channel = "zach_wise"
username = "bot-username"
color = "#ff0000"

# Use https://twitchtokengenerator.com/?scope=chat:read+chat:edit to generate an OAuth token:
#token = "tvkmtncawfiafrxbrk3yeoap4a4b2d"

    [twitch.announce]
    #template = "SingsMic <%- stream.source %> <%- stream.city && stream.state ? `(${stream.city} ${stream.state})` : '' %> <%- stream.link %>"
    #interval = 60
    #delay = 30

    [twitch.vote]
    #template = "Switching to #<%- selectedIdx %> (with <%- voteCount %> votes)"
    #interval = 15

[cert]
# SSL certificates (optional)
# If you specify an https:// URL for the "webserver" option, a certificate will be automatically generated and signed by Let's Encrypt.
# For this to work, Streamwall must be accessible from both ports 80 and 443.

# Uncomment to obtain a real certificate (otherwise a testing cert will be generated)
#production = true

# Email address to use when registering SSL certificate with Let's Encrypt
#email = "hi@streamwall.io"

# Directory to store certificate
#dir = "../streamwall-cert"

[streamdelay]
#endpoint = "http://localhost:8404"
#key = "super-secret"
